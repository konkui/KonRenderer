<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_model_8h_source" xml:lang="en-US">
<title>model.h</title>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
2 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
3 <emphasis role="preprocessor">#include&#32;&quot;geometry.h&quot;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&quot;tgaimage.h&quot;</emphasis>
5 
6 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_model">Model</link>&#32;{
7 &#32;&#32;&#32;&#32;std::vector&lt;vec3&gt;&#32;verts{};&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;array&#32;of&#32;vertices</emphasis>
8 &#32;&#32;&#32;&#32;std::vector&lt;vec2&gt;&#32;tex_coord{};&#32;<emphasis role="comment">//&#32;per-vertex&#32;array&#32;of&#32;tex&#32;coords</emphasis>
9 &#32;&#32;&#32;&#32;std::vector&lt;vec3&gt;&#32;norms{};&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;per-vertex&#32;array&#32;of&#32;normal&#32;vectors</emphasis>
10 &#32;&#32;&#32;&#32;std::vector&lt;int&gt;&#32;facet_vrt{};
11 &#32;&#32;&#32;&#32;std::vector&lt;int&gt;&#32;facet_tex{};&#32;&#32;<emphasis role="comment">//&#32;per-triangle&#32;indices&#32;in&#32;the&#32;above&#32;arrays</emphasis>
12 &#32;&#32;&#32;&#32;std::vector&lt;int&gt;&#32;facet_nrm{};
13 &#32;&#32;&#32;&#32;<link linkend="_struct_t_g_a_image">TGAImage</link>&#32;diffusemap{};&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;diffuse&#32;color&#32;texture</emphasis>
14 &#32;&#32;&#32;&#32;<link linkend="_struct_t_g_a_image">TGAImage</link>&#32;normalmap{};&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;normal&#32;map&#32;texture</emphasis>
15 &#32;&#32;&#32;&#32;<link linkend="_struct_t_g_a_image">TGAImage</link>&#32;specularmap{};&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;specular&#32;map&#32;texture</emphasis>
16 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;load_texture(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;filename,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;suffix,&#32;<link linkend="_struct_t_g_a_image">TGAImage</link>&#32;&amp;img);
17 <emphasis role="keyword">public</emphasis>:
18 &#32;&#32;&#32;&#32;<link linkend="_class_model">Model</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;filename);
19 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nverts()&#32;<emphasis role="keyword">const</emphasis>;
20 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nfaces()&#32;<emphasis role="keyword">const</emphasis>;
21 &#32;&#32;&#32;&#32;<link linkend="_structvec_3_013_01_4">vec3</link>&#32;normal(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;iface,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nthvert)&#32;<emphasis role="keyword">const</emphasis>;&#32;<emphasis role="comment">//&#32;per&#32;triangle&#32;corner&#32;normal&#32;vertex</emphasis>
22 &#32;&#32;&#32;&#32;<link linkend="_structvec_3_013_01_4">vec3</link>&#32;normal(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structvec_3_012_01_4">vec2</link>&#32;&amp;uv)&#32;<emphasis role="keyword">const</emphasis>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;fetch&#32;the&#32;normal&#32;vector&#32;from&#32;the&#32;normal&#32;map&#32;texture</emphasis>
23 &#32;&#32;&#32;&#32;<link linkend="_structvec_3_013_01_4">vec3</link>&#32;vert(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;i)&#32;<emphasis role="keyword">const</emphasis>;
24 &#32;&#32;&#32;&#32;<link linkend="_structvec_3_013_01_4">vec3</link>&#32;vert(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;iface,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nthvert)&#32;<emphasis role="keyword">const</emphasis>;
25 &#32;&#32;&#32;&#32;<link linkend="_structvec_3_012_01_4">vec2</link>&#32;uv(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;iface,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nthvert)&#32;<emphasis role="keyword">const</emphasis>;
26 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_g_a_image">TGAImage</link>&amp;&#32;diffuse()<emphasis role="keyword">&#32;&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;diffusemap;&#32;&#32;}
27 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_g_a_image">TGAImage</link>&amp;&#32;specular()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;specularmap;&#32;}
28 };
29 
</programlisting></section>
